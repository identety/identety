name: CI and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci


      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done
          echo "PostgreSQL is ready!"

      - name: Run Database Migrations
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/testdb
        run: |
          cd ./tools
          npm install
          npx drizzle-kit generate
          npx drizzle-kit migrate
          

      - name: Run unit tests
        run: npm run test

      - name: Run e2e tests
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/testdb
          API_KEY: test-api-key
        run: npm run test:e2e

#      - name: Check linting
#        run: npm run lint
#
#      - name: Check formatting
#        run: npm run format:check

      - name: Build
        run: npm run build